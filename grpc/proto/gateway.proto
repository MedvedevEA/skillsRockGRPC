//protoc --grpc-gateway_out=./grpc/gen --grpc-gateway_opt generate_unbound_methods=true --openapiv2_out ./grpc/gen ./grpc/proto/gateway.proto
syntax="proto3";

package auth;

option go_package = ".;auth";

import "google/api/annotations.proto";

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/api/v1/register"
      body: "*"
    };
  }
  rpc Unregister(UnregisterRequest) returns (UnregisterResponse) {
    option (google.api.http) = {
      post: "/api/v1/unregister"
      body: "*"
    };
  }
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/login"
      body: "*"
    };
  }
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/logout"
      body: "*"
    };
  }
  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse) {
    option (google.api.http) = {
      post: "/api/v1/updatepassword"
      body: "*"
    };
  }
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/refreshtoken"
      body: "*"
    };
  }
}

message RegisterRequest {
    string login=1;
    string password=2;
}
message RegisterResponse {
    string userId=1;
}
message UnregisterRequest {
    string userId=1;
}
message UnregisterResponse {   
}

message LoginRequest {
    string login=1;
    string password=2;
    string deviceCode=3;
}
message LoginResponse {
    string accessToken=1;
    string refreshToken=2;
}
message LogoutRequest {
    string userId=1;
    string deviceCode=2;
}
message LogoutResponse {
}
message UpdatePasswordRequest {
    string userId=1;
    string newPassword=2;
}
message UpdatePasswordResponse {
}
message RefreshTokenRequest {
    string refreshTokenId=1;
}
message RefreshTokenResponse {
    string accessToken=1;
    string refreshToken=2;
}